classdef ColorMask < handle
    properties 
        end

    methods
        function self = ColorMask()
            %empty the constructor to see if it works.
        end

        %% color masking functions

        function [BW,maskedRGBImage] = red(self,RGB)
            %createMask  Threshold RGB image using auto-generated code from colorThresholder app.
            %  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
            %  auto-generated code from the colorThresholder app. The colorspace and
            %  range for each channel of the colorspace were set within the app. The
            %  segmentation mask is returned in BW, and a composite of the mask and
            %  original RGB images is returned in maskedRGBImage.

            % Auto-generated by colorThresholder app on 05-Mar-2025
            %------------------------------------------------------


            % Convert RGB image to chosen color space
            I = rgb2hsv(RGB);

            % Define thresholds for channel 1 based on histogram settings
            channel1Min = 0.945;
            channel1Max = 0.054;

            % Define thresholds for channel 2 based on histogram settings
            channel2Min = 0.184;
            channel2Max = 0.952;

            % Define thresholds for channel 3 based on histogram settings
            channel3Min = 0.173;
            channel3Max = 0.766;

            % Create mask based on chosen histogram thresholds
            sliderBW = ( (I(:,:,1) >= channel1Min) | (I(:,:,1) <= channel1Max) ) & ...
                (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
                (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
            BW = sliderBW;

            % Initialize output masked image based on input image.
            maskedRGBImage = RGB;

            % Set background pixels where BW is false to zero.
            maskedRGBImage(repmat(~BW,[1 1 3])) = 0;
        end

        function [BW,maskedRGBImage] = orange(self,RGB)
            %createMask  Threshold RGB image using auto-generated code from colorThresholder app.
            %  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
            %  auto-generated code from the colorThresholder app. The colorspace and
            %  range for each channel of the colorspace were set within the app. The
            %  segmentation mask is returned in BW, and a composite of the mask and
            %  original RGB images is returned in maskedRGBImage.

            % Auto-generated by colorThresholder app on 05-Mar-2025
            %------------------------------------------------------


            % Convert RGB image to chosen color space
            I = rgb2hsv(RGB);

            % Define thresholds for channel 1 based on histogram settings
            channel1Min = 0.052;
            channel1Max = 0.101;

            % Define thresholds for channel 2 based on histogram settings
            channel2Min = 0.309;
            channel2Max = 0.585;

            % Define thresholds for channel 3 based on histogram settings
            channel3Min = 0.633;
            channel3Max = 1.000;

            % Create mask based on chosen histogram thresholds
            sliderBW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
                (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
                (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
            BW = sliderBW;

            % Initialize output masked image based on input image.
            maskedRGBImage = RGB;

            % Set background pixels where BW is false to zero.
            maskedRGBImage(repmat(~BW,[1 1 3])) = 0;
        end

        function [BW,maskedRGBImage] = yellow(self, RGB)
            %createMask  Threshold RGB image using auto-generated code from colorThresholder app.
            %  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
            %  auto-generated code from the colorThresholder app. The colorspace and
            %  range for each channel of the colorspace were set within the app. The
            %  segmentation mask is returned in BW, and a composite of the mask and
            %  original RGB images is returned in maskedRGBImage.

            % Auto-generated by colorThresholder app on 05-Mar-2025
            %------------------------------------------------------


            % Convert RGB image to chosen color space
            I = rgb2hsv(RGB);

            % Define thresholds for channel 1 based on histogram settings
            channel1Min = 0.126;
            channel1Max = 0.237;

            % Define thresholds for channel 2 based on histogram settings
            channel2Min = 0.245;
            channel2Max = 1.000;

            % Define thresholds for channel 3 based on histogram settings
            channel3Min = 0.628;
            channel3Max = 1.000;

            % Create mask based on chosen histogram thresholds
            sliderBW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
                (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
                (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
            BW = sliderBW;

            % Initialize output masked image based on input image.
            maskedRGBImage = RGB;

            % Set background pixels where BW is false to zero.
            maskedRGBImage(repmat(~BW,[1 1 3])) = 0;
        end

        function [BW,maskedRGBImage] = green(self, RGB)
            %createMask  Threshold RGB image using auto-generated code from colorThresholder app.
            %  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
            %  auto-generated code from the colorThresholder app. The colorspace and
            %  range for each channel of the colorspace were set within the app. The
            %  segmentation mask is returned in BW, and a composite of the mask and
            %  original RGB images is returned in maskedRGBImage.

            % Auto-generated by colorThresholder app on 05-Mar-2025
            %------------------------------------------------------


            % Convert RGB image to chosen color space
            I = rgb2hsv(RGB);

            % Define thresholds for channel 1 based on histogram settings
            channel1Min = 0.331;
            channel1Max = 0.442;

            % Define thresholds for channel 2 based on histogram settings
            channel2Min = 0.287;
            channel2Max = 1.000;

            % Define thresholds for channel 3 based on histogram settings
            channel3Min = 0.378;
            channel3Max = 0.830;

            % Create mask based on chosen histogram thresholds
            sliderBW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
                (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
                (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
            BW = sliderBW;

            % Initialize output masked image based on input image.
            maskedRGBImage = RGB;

            % Set background pixels where BW is false to zero.
            maskedRGBImage(repmat(~BW,[1 1 3])) = 0;

        end


        function [BW,maskedRGBImage] = blue(self, RGB)
            %createMask  Threshold RGB image using auto-generated code from colorThresholder app.
            %  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
            %  auto-generated code from the colorThresholder app. The colorspace and
            %  range for each channel of the colorspace were set within the app. The
            %  segmentation mask is returned in BW, and a composite of the mask and
            %  original RGB images is returned in maskedRGBImage.

            % Auto-generated by colorThresholder app on 05-Mar-2025
            %------------------------------------------------------


            % Convert RGB image to chosen color space
            I = rgb2lab(RGB);

            % Define thresholds for channel 1 based on histogram settings
            channel1Min = 22.719;
            channel1Max = 59.638;

            % Define thresholds for channel 2 based on histogram settings
            channel2Min = -55.487;
            channel2Max = 64.369;

            % Define thresholds for channel 3 based on histogram settings
            channel3Min = -97.029;
            channel3Max = -47.060;

            % Create mask based on chosen histogram thresholds
            sliderBW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
                (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
                (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
            BW = sliderBW;

            % Initialize output masked image based on input image.
            maskedRGBImage = RGB;

            % Set background pixels where BW is false to zero.
            maskedRGBImage(repmat(~BW,[1 1 3])) = 0;
        end
        %% ok that's all the colors
    end

end